<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>fanrui-learning</artifactId>
        <groupId>com.dream</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>module-flink</artifactId>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <!--mvn suishen:log-deps-check-maven-plugin:1.0-SNAPSHOT:check-->
            <!--<plugin>-->
                <!--<groupId>suishen</groupId>-->
                <!--<artifactId>log-deps-check-maven-plugin</artifactId>-->
                <!--<version>1.0-SNAPSHOT</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>check-log-deps</id>-->
                        <!--<phase>validate</phase>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<failOnError>true</failOnError>-->
                <!--</configuration>-->
            <!--</plugin>-->

        </plugins>
    </build>


    <properties>
        <flink.version>1.8.1</flink.version>
        <scala.binary.version>2.11</scala.binary.version>
        <scala.version>2.11.11</scala.version>
        <kafka.version>0.11</kafka.version>
    </properties>

    <profiles>
        <!-- This profile helps to make things run out of the box in IntelliJ -->
        <!-- Its adds Flink's core classes to the runtime class path. -->
        <!-- Otherwise they are missing in IntelliJ, because the dependency is 'provided' -->
        <profile>
            <id>add-dependencies-for-IDEA</id>

            <activation>
                <property>
                    <name>idea.version</name>
                </property>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-scala_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>compile</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>compile</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scala.version}</version>
                    <scope>compile</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-test-utils_2.11</artifactId>
                    <version>${flink.version}</version>
                    <scope>compile</scope>
                </dependency>


                <dependency>
                    <groupId>com.twitter</groupId>
                    <artifactId>chill-protobuf</artifactId>
                    <version>0.5.2</version>
                    <exclusions>
                        <exclusion>
                            <artifactId>chill-java</artifactId>
                            <groupId>com.twitter</groupId>
                        </exclusion>
                        <exclusion>
                            <artifactId>kryo</artifactId>
                            <groupId>com.esotericsoftware.kryo</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
    </profiles>


    <dependencies>
        <!-- flink scala -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-scala_${scala.binary.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka-${kafka.version}_${scala.binary.version}</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>


</project>