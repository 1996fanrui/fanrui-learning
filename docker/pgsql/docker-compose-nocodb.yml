version: '3.8'

services:
  # PostgreSQL 服务 - 复用现有数据
  postgres:
    image: postgres:13.13
    container_name: pgsql
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # 添加健康检查
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pgsql_network

  # NocoDB 服务 - 数据库可视化和管理工具
  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    restart: always
    ports:
      - "8080:8080"
    # 添加主机解析
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # 等待 PostgreSQL 服务启动
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # NocoDB 数据库配置 - 使用官方推荐格式连接到我们自己的 PostgreSQL
      NC_DB: "pg://host.docker.internal:5432?u=root&p=123456&d=nocodb_db"
      # NocoDB 管理员配置
      NC_AUTH_JWT_SECRET: "569a1821-0a93-45e8-87ab-eb857f20a010"
      NC_ADMIN_EMAIL: "admin@example.com"
      NC_ADMIN_PASSWORD: "admin123"
      # 其他配置
      NC_PUBLIC_URL: "http://localhost:8080"
      NC_DISABLE_TELE: "true"
    volumes:
      # 持久化 NocoDB 数据
      - nocodb_data:/usr/app/data
    networks:
      - pgsql_network

networks:
  pgsql_network:
    driver: bridge
    name: pgsql_network

volumes:
  postgres_data:
    external:
      name: pgsql_postgres_data
  nocodb_data:
    driver: local